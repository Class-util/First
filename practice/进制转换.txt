import java.util.*;


public class Solution {
    /**
     * 进制转换
     * @param M int整型 给定整数
     * @param N int整型 转换到的进制
     * @return string字符串
     */
    public String solve (int M, int N) {
        // write code here
        HashMap<Integer,Character> map = new HashMap<>();
        map.put(10,'A');
        map.put(11,'B');
        map.put(12,'C');
        map.put(13,'D');
        map.put(14,'E');
        map.put(15,'F');
        //定义返回值
        StringBuilder ret = new StringBuilder();
        //标志位，用来判断正负
        boolean flog = false;
        if(M < 0){
            flog = true;
            //将负数变为正数，好计算
            M = -M;
        }
        while(M > 0){
            //要转成什么进制，每次就除什么
            int num = M % N;
            ret.append(map.get(num) == null ? num : map.get(num) + "");
            M = M / N;
        }
        if(flog){
            //添加负号，并将字符串倒序输出
            return "-" + ret.reverse().toString();
        }else{
            return ret.reverse().toString();
        }
    }
}