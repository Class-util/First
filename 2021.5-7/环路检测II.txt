package Demo14;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

/**
 * Created with IntelliJ IDEA.
 * Description:
 * User:吴博
 * Date:2021 05 27
 * Time:22:44
 */

class ListNode {
     int val;
     ListNode next;
     ListNode(int x) {
         val = x;
         next = null;
     }
}

public class Test02 {
    public static void main(String[] args) {
        ListNode n1 = new ListNode(3);
        ListNode n2 = new ListNode(2);
        ListNode n3 = new ListNode(0);
        ListNode n4 = new ListNode(-4);
        n1.next = n2;
        //n2.next = n1;
        n2.next = n3;
        n3.next = n4;
        n4.next = n2;
        ListNode listNode = detectCycle(n1);
        if(listNode == null){
            System.out.println("null");
        }else {
            System.out.println(listNode.val);
        }
    }

    //环路检测
    public static ListNode detectCycle1(ListNode head) {
        List<ListNode> list = new ArrayList<>();
        ListNode cur = head;
        while(cur != null) {
            if(list.contains(cur)){
                return cur;
            }else {
                list.add(cur);
                cur = cur.next;
            }
        }
        return null;
    }

//方法有问题
    public static ListNode detectCycle(ListNode head) {
        List<ListNode> list = new ArrayList<>();
        ListNode cur = head;
        int count = 0;
        boolean b = false;
        while(cur != null){
            if(list.contains(cur)){
                b = true;
                break;
            }
            list.add(cur);
            count++;
            cur = cur.next;
        }
        if(b){
            if(count%list.size() == 0){
                return list.get(0);
            }else {
                return list.get((count%list.size()) + 1);
            }
        }else {
            return null;
        }
    }
}
