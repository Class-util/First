
package Demo09;/*
 *@Author：
 *@Date:2020/11/30 17:24
 */

import Demo03.Solution;

public class Test08 {
    public static void main(String[] args) {
    int[] arr = {3,24,50,79,88,150,345};
    int sign = 200;
    int[] num = twoSum(arr, sign);
    for (int i : num) {
        System.out.println(i);
    }
}
//双指针
    public static int[] twoSum(int[] numbers, int target) {
        int low = 0, high = numbers.length - 1;
        while (low < high) {
            int sum = numbers[low] + numbers[high];
            if (sum == target) {
                return new int[]{low + 1, high + 1};
            } else if (sum < target) {
                ++low;
            } else {
                --high;
            }
        }
        return new int[]{-1, -1};
    }
//二分查找法
    public int[] twoSum1(int[] numbers, int target) {
        for (int i = 0; i < numbers.length; ++i) {
            int low = i + 1, high = numbers.length - 1;
            while (low <= high) {
                int mid = (high - low) / 2 + low;
                if (numbers[mid] == target - numbers[i]) {
                    return new int[]{i + 1, mid + 1};
                } else if (numbers[mid] > target - numbers[i]) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            }
        }
        return new int[]{-1, -1};
    }
}
