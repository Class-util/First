package Demo07;/*
 *@Author：
 *@Date:2020/11/8 15:07
 */

public class Test03 {
    public static void main(String[] args) {
        int []num = {1,3,5,8};
        int sign = 9;
        int i = searchInsert(num, sign);
        System.out.println(i);
    }
    public static int searchInsert(int[] nums, int target) {
        //如果数组为空，直接返回首元素地址
        if(nums == null){
            return 0;
        }
        int i = 0;
        //在数组查找与之相等的元素，并返回其索引值
        for (i = 0; i < nums.length; i++) {
            if(nums[i]==target){
                return i;
            }
        }
        //如果目标值小于数组的第一个元素则直接返回0，因为要将目标值插在第一个元素的位置（其索引值为0）
        if(target<nums[0]){
            return 0;
        }else {
            //如果目标值比数组最后一个元素还大，则返回长度即可
            if(target>nums[nums.length-1]){
                return nums.length;
            }else {
                //如果目标值在数组中间，则找到左边比他小，右边比他大的位置，返回右边值得索引值即可
                for (int j = 0; j < nums.length; j++) {
                    if(nums[j]<target&&nums[j+1]>target){
                        return j+1;
                    }
                }
            }
        }
        return 0;
    }
}
